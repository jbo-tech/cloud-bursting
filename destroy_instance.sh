#!/bin/bash
# destroy_instance.sh - D√©truire l'instance de test

if [ -f .current_instance_id ]; then
    INSTANCE_ID=$(cat .current_instance_id)
    echo "üßπ Destruction de l'instance $INSTANCE_ID..."

    # 1. R√©cup√©rer l'√©tat actuel
    STATUS=$(scw instance server get $INSTANCE_ID --output=json 2>/dev/null | jq -r '.state')
    echo "üìä √âtat actuel: $STATUS"

    # 2. Arr√™ter si n√©cessaire
    if [ "$STATUS" != "stopped" ] && [ "$STATUS" != "stopping" ]; then
        echo "‚è∏Ô∏è Arr√™t de l'instance..."
        scw instance server stop $INSTANCE_ID --wait 2>/dev/null || true
    fi

    # 3. Attendre l'arr√™t complet (VRAIMENT attendre)
    echo "‚è≥ Attente de l'arr√™t complet..."
    MAX_ATTEMPTS=60  # 2 minutes max
    ATTEMPT=0

    while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
        STATUS=$(scw instance server get $INSTANCE_ID --output=json 2>/dev/null | jq -r '.state')

        if [ "$STATUS" = "stopped" ]; then
            echo "‚úÖ Instance arr√™t√©e"
            break
        fi

        ATTEMPT=$((ATTEMPT + 1))
        echo "  √âtat: $STATUS - attente... ($ATTEMPT/$MAX_ATTEMPTS)"
        sleep 2
    done

    # 4. Petit d√©lai de s√©curit√© (important!)
    echo "‚è≥ D√©lai de s√©curit√©..."
    sleep 5

    # 5. Supprimer l'instance
    echo "üóëÔ∏è Suppression de l'instance..."
    if scw instance server delete $INSTANCE_ID 2>/dev/null; then
        echo "‚úÖ Instance supprim√©e"
    else
        # Si √ßa √©choue encore, forcer
        echo "‚ö†Ô∏è Premi√®re tentative √©chou√©e, force de suppression..."
        sleep 10
        scw instance server delete $INSTANCE_ID --with-volumes --with-ip --force 2>/dev/null || {
            echo "‚ùå Impossible de supprimer. Commande manuelle requise:"
            echo "   scw instance server delete $INSTANCE_ID"
            exit 1
        }
    fi

    # 6. Nettoyer
    rm .current_instance_id

    echo "‚úÖ Instance d√©truite"
else
    echo "‚ùå Aucune instance √† d√©truire"
fi
